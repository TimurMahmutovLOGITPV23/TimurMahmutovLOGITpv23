-- Trigerid
-- SQL TRIGER - protsess,
-- mille abil tema sisse
-- kirjutatud tegevused automaatselt kävitatakse
-- INSERT; UPDATE; DELETE trigerid,
-- mis jälgivad antud tegevused tabelites
-- ja kirjutavad logi tabeli mida nad jälgisid.
CREATE database trigerLOGIT;
USE trigerLOGIT

CREATE TABLE toode(
toodeID int primary KEY identity(1,1),
toodeNimetus varchar(25),
toodeHind decimal(5,2))
--tabel logi, mis täidab triger
CREATE TABLE logi(
id int PRImary key identity(1,1),
tegevus varchar(25),
kuupaev datetime,
andmed TEXT)
-- INSERT TRIGER, MIS JÄGIB ANDMETE LISAMINE TOODE-TABELISSE

CREATE TRIGGER toodeLisamine
ON toode
FOR INSERT
AS
INSERT INTO logi(tegevus, kuupaev, andmed)
SELECT 'toode on lisatud', 
GETDATE(),
CONCAT('uus toode: ', inserted.toodeNimetus,
' hind: ' , inserted.toodeHind, 'lisas kasutaja -', USER)

FROM inserted;

DROP TRIGGER toodeLisamine;
--konroll
INSERT INTO toode(toodeNimetus, toodeHind)
VALUES ('Coca-cola', 2.20);
Select * FROM toode;
SELECT * FROM logi;
-- DELETE TRIGER, mis jälgib toode kustutamine tabelis

CREATE TRIGGER toodeKustutamine
on toode
FOR DELETE
AS
INSERT INTO logi (tegevus, kuupaev, andmed)
SELECT 'toode on kustatud',
GETDATE(),
CONCAT(deleted.toodeNimetus,
'|tegi kasutaja ', SYSTEM_USER)
from deleted;
delete from toode
where toodeID=3
select*from toode;
select*from logi;


-- Update Trigger, mis jälgib toode uuendamine tabelis
CREATE TRIGGER toodeKustutamine1
on toode
FOR UPDATE
AS
INSERT INTO logi (tegevus, kuupaev, andmed)
SELECT 'toode on uuendatud',
GETDATE(),
CONCAT('vanad andmed - ', deleted.toodeNimetus,', ', deleted.toodeHind,
' \nuued andmed - ', inserted.toodeNimetus, ', ', inserted.toodeHind,
'|tegi kasutaja ', SYSTEM_USER)
from deleted INNER JOIN inserted
ON deleted.toodeID=inserted.toodeID;

--kontroll 
update toode SET toodeHind=4.00
WHERE toodeNimetus='Fanta'
SELECT * FROM toode;
SELECT * FROM logi;
